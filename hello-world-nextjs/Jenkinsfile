pipeline {
    agent none

    environment {
        GKE_CLUSTER_NAME = 'your-gke-cluster-name'  
        GKE_PROJECT = 'your-gke-project-id'  
        GKE_ZONE = 'us-central1-a'  
        DOCKER_REGISTRY = 'asia-south1-docker.pkg.dev/your-project-id/your-repository'  
        DOCKER_IMAGE_NAME = 'your-image-name'  
    }

    stages {
        stage('Clone Repository') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'node'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16
      command:
        - cat
      tty: true
    - name: docker
      image: docker:19.03.12  # Docker-in-Docker image
      privileged: true
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'node'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16
      command:
        - cat
      tty: true
    - name: docker
      image: docker:19.03.12
      privileged: true
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('node') {
                    script {
                        // Navigate to the correct directory if necessary
                        dir('hello-world-nextjs') {
                            sh 'npm install'  // Install dependencies using npm
                        }
                    }
                }
            }
        }

        stage('Build Docker Image') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16
      command:
        - cat
      tty: true
    - name: docker
      image: docker:19.03.12
      privileged: true
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        // Build the Docker image
                        sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1 ./hello-world-nextjs"
                    }
                }
            }
        }

        stage('Push Docker Image') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16
      command:
        - cat
      tty: true
    - name: docker
      image: docker:19.03.12
      privileged: true
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        // Push Docker image to Artifact Registry
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1"
                    }
                }
            }
        }

        stage('Deploy to GKE') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16
      command:
        - cat
      tty: true
    - name: docker
      image: docker:19.03.12
      privileged: true
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        // Deploy to Google Kubernetes Engine (GKE)
                        sh "gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}"
                        sh 'kubectl apply -f kubernetes/deployment.yaml'
                        sh 'kubectl apply -f kubernetes/service.yaml'
                    }
                }
            }
        }
    }
}
