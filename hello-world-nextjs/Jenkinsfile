pipeline {
    agent {
        kubernetes {
            label "agent-${UUID.randomUUID().toString()}"
            yamlFile "hello-world-nextjs/pipeline/agent.yaml"  // Referencing the YAML file in the pipeline
        }
    }
    environment {
        GKE_CLUSTER_NAME = 'lloyds-cluster-clone-1-clone-1' 
        GKE_PROJECT = 'burner-ganprasa2'  
        GKE_ZONE = 'us-central1-a' 
        DOCKER_REGISTRY = 'us-central1-docker.pkg.dev/burner-ganprasa2/lloyds-repo' 
        DOCKER_IMAGE_NAME = 'first-image' 
    }
    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        stage('Authenticate with Artifact Registry') {
            steps {
                withCredentials([file(credentialsId: 'gcp-artifact-registry-key', variable: 'GCLOUD_SERVICE_KEY')]) {
                    container('gcloud') {
                        script {
                            sh 'gcloud auth activate-service-account --key-file=$GCLOUD_SERVICE_KEY'
                            sh 'gcloud auth configure-docker us-central1-docker.pkg.dev'
                        }
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                container('docker') {
                    script {
                        sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1 ./hello-world-nextjs"
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                container('docker') {
                    script {
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1"
                    }
                }
            }
        }
        stage('Deploy to GKE') {
            steps {
                container('gcloud') {
                    script {
                        sh "gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}"
                        sh 'kubectl apply -f kubernetes/deployment.yaml'
                        sh 'kubectl apply -f kubernetes/service.yaml'
                    }
                }
            }
        }
    }
}