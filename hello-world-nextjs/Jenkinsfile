pipeline {
    agent none  // No default agent, we will specify Kubernetes agent below

    stages {
        stage('Clone Repository') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'node'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16  // Node.js container for building Next.js project
      command:
        - cat
      tty: true
    - name: docker
      image: docker:latest  // Docker container to build and push the image
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                checkout scm  // Checkout the repository to Jenkins workspace
            }
        }

        stage('Install Dependencies') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'node'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16  // Node.js container to install dependencies
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('node') {
                    script {
                        sh 'npm install'  // Install dependencies using npm
                    }
                }
            }
        }

        stage('Build Docker Image') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16  // Node.js container for the build process
      command:
        - cat
      tty: true
    - name: docker
      image: docker:latest  // Docker container for Docker build and push
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        sh 'docker build -t myregistry/nextjs-app:v1 .'  // Build Docker image
                    }
                }
            }
        }

        stage('Push Docker Image') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16  // Node.js container (if needed)
      command:
        - cat
      tty: true
    - name: docker
      image: docker:latest  // Docker container to push the built image
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        sh 'docker push myregistry/nextjs-app:v1'  // Push the Docker image to the registry
                    }
                }
            }
        }

        stage('Deploy to GKE') {
            agent {
                kubernetes {
                    label 'nextjs-pod'
                    defaultContainer 'docker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: nextjs-pod
spec:
  containers:
    - name: node
      image: node:16  // Node.js container
      command:
        - cat
      tty: true
    - name: docker
      image: docker:latest  // Docker container to deploy the image
      command:
        - cat
      tty: true
  '''
                }
            }
            steps {
                container('docker') {
                    script {
                        // Apply the Kubernetes deployment and service for the Next.js app
                        sh 'kubectl apply -f kubernetes/deployment.yaml'
                        sh 'kubectl apply -f kubernetes/service.yaml'
                    }
                }
            }
        }
    }
}
